/*
簡単な問題
k*lでボトルの全体容量が測れる.
それをnl(mL)で割ると作れる最小がわかる.
c*dこのスライスされたライムをn人で割る
塩は全体/人数*一つ分で答えは出るんです.
*/


/********   All Required Header Files ********/
#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <sstream>
#include <queue>
#include <deque>
#include <bitset>
#include <iterator>
#include <list>
#include <stack>
#include <map>
#include <set>
#include <functional>
#include <numeric>
#include <utility>
#include <limits>
#include <time.h>
#include <math.h>
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <assert.h>
#include <conio.h>

using namespace std;

/*******  All Required define Pre-Processors and typedef Constants *******/
#define SCD(t) scanf("%d",&t)
#define SCLD(t) scanf("%ld",&t)
#define SCLLD(t) scanf("%lld",&t)
#define SCC(t) scanf("%c",&t)
#define SCS(t) scanf("%s",t)
#define SCF(t) scanf("%f",&t)
#define SCLF(t) scanf("%lf",&t)
#define MEM(a, b) memset(a, (b), sizeof(a))
#define FOR(i, j, k, in) for (int i=j ; i<k ; i+=in)
#define RFOR(i, j, k, in) for (int i=j ; i>=k ; i-=in)
#define REP(i, j) FOR(i, 0, j, 1)
#define RREP(i, j) RFOR(i, j, 0, 1)
#define all(cont) cont.begin(), cont.end()
#define rall(cont) cont.end(), cont.begin()
#define FOREACH(it, l) for (auto it = l.begin(); it != l.end(); it++)
#define IN(A, B, C) assert( B <= A && A <= C)
#define MP make_pair
#define PB push_back
#define INF (int)1e9
#define EPS 1e-9
#define PI 3.1415926535897932384626433832795
#define MOD 1000000007
#define read(type) readInt<type>()
const double pi = acos(-1.0);
typedef pair<int, int> PII;
typedef vector<int> VI;
typedef vector<string> VS;
typedef vector<PII> VII;
typedef vector<VI> VVI;
typedef map<int, int> MPII;
typedef set<int> SETI;
typedef multiset<int> MSETI;
typedef long int int32;
typedef unsigned long int uint32;
typedef long long int int64;
typedef unsigned long long int  uint64;

/****** Template of some basic operations *****/
template<typename T, typename U> inline void amin(T& x, U y) { if (y < x) x = y; }
template<typename T, typename U> inline void amax(T& x, U y) { if (x < y) x = y; }
/**********************************************/

/****** Template of Fast I/O Methods *********/
void inputA(int number) {
	VI a(number);
	FOR(i, 0, number, 1) {
		cin >> a[i];
	}

}
void inputA_B(int number) {
	VI a(number);
	VI b(number);
	FOR(i, 0, number, 1) {
		cin >> a[i] >> b[i];
	}

}
template <typename T> inline void write(T x)
{
	int i = 20;
	char buf[21];
	// buf[10] = 0;
	buf[20] = '\n';

	do
	{
		buf[--i] = x % 10 + '0';
		x /= 10;
	} while (x);
	do
	{
		putchar(buf[i]);
	} while (buf[i++] != '\n');
}

template <typename T> inline T readInt()
{
	T n = 0, s = 1;
	char p = getchar();
	if (p == '-')
		s = -1;
	while ((p < '0' || p>'9') && p != EOF && p != '-')
		p = getchar();
	if (p == '-')
		s = -1, p = getchar();
	while (p >= '0' && p <= '9') {
		n = (n << 3) + (n << 1) + (p - '0');
		p = getchar();
	}

	return n * s;
}



/********** Main()  function **********/
int main()
{
	string ss;
	int number=0, n,k,l,c,d,p,nl,np;
	//cin >> number;
	string s0;
	string s1;
	string s2;
	cin >> n >> k >> l >> c >> d >> p >> nl >> np;
	int min1 = 0;
	//cout << (k * l / nl) <<":"<< c * d/n << ":" << p / np <<endl;
	min1 = min((k*l/nl),c*d);
	min1 = min(min1,p/np);
	vector<int> s(3);
	s[0] = (k * l / nl), s[1] = c * d / n, s[2] = p / np;
	sort(s.begin(), s.begin());
	cout << min1/n << endl;


	;
	/*
	for (int i = 0; i < number; i++) {
		cin >> s[i];
	}
	cin >> s;
	sort(s.begin(),s.end());
	s.erase(unique(s.begin(), s.end()), s.end());
	//cout << s << endl;
	int number = s.size() ; 
	if (number % 2 == 0) { cout << "CHAT WITH HER!" << endl; }
	else { cout << "IGNORE HIM!" << endl; }
	cin >> s0 >> s1 >> s2;
	s0.append(s1);
	sort(s0.begin(), s0.end());
	sort(s2.begin(), s2.end());
	//cout << s0 << endl <<s2 << endl;
	if (s0 != s2) {
		cout << "NO" << endl;
	}
	else {
		cout << "YES" << endl;
	}*/

	}
